"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VueTreeNodeElement = void 0;
exports.getElementInfo = getElementInfo;

var _goUpByTheTree = require("../goUpByTheTree");

var _HtmlElementTreeNode = require("../HtmlElementTreeNode");

var _getVNodeBoundingBox = require("./getVNodeBoundingBox");

function getElementInfo(found) {
  const parentComponent = found.__vueParentComponent;

  if (parentComponent) {
    if (!parentComponent.type) {
      return null;
    }

    const componentBBox = (0, _getVNodeBoundingBox.getVueComponentBoundingBox)(parentComponent);
    const {
      __file,
      __name
    } = parentComponent.type;

    if (__file && __name) {
      return {
        thisElement: {
          box: found.getBoundingClientRect(),
          label: found.nodeName.toLowerCase(),
          link: {
            column: 1,
            line: 1,
            filePath: __file,
            projectPath: ""
          }
        },
        htmlElement: found,
        parentElements: [],
        componentBox: componentBBox || found.getBoundingClientRect(),
        componentsLabels: [{
          label: __name,
          link: {
            column: 1,
            line: 1,
            filePath: __file,
            projectPath: ""
          }
        }]
      };
    }
  }

  return null;
}

class VueTreeNodeElement extends _HtmlElementTreeNode.HtmlElementTreeNode {
  getSource() {
    const element = this.element;
    const parentComponent = element.__vueParentComponent;

    if (parentComponent && parentComponent.type) {
      const {
        __file
      } = parentComponent.type;

      if (__file) {
        return {
          fileName: __file,
          lineNumber: 1,
          columnNumber: 1
        };
      }
    }

    return null;
  }

  getComponent() {
    return null;
  } // getComponent(): TreeNodeComponent | null {
  //   const element = this.element as VueElement;
  //   const parentComponent = element.__vueParentComponent;
  //   if (parentComponent && parentComponent.type) {
  //     const { __name } = parentComponent.type;
  //     if (__name) {
  //       return {
  //         label: __name,
  //         definitionLink: this.getSource() || undefined,
  //       };
  //     }
  //   }
  //   return null;
  // }


}

exports.VueTreeNodeElement = VueTreeNodeElement;

function getTree(element) {
  const originalRoot = new VueTreeNodeElement(element);
  return (0, _goUpByTheTree.goUpByTheTree)(originalRoot);
}

const vueAdapter = {
  getElementInfo,
  getTree
};
var _default = vueAdapter;
exports.default = _default;