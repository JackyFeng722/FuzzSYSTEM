"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTree = getTree;

var _reactAdapter = _interopRequireDefault(require("./react/reactAdapter"));

var _jsxAdapter = _interopRequireDefault(require("./jsx/jsxAdapter"));

var _svelteAdapter = _interopRequireDefault(require("./svelte/svelteAdapter"));

var _shared = require("@locator/shared");

var _vueAdapter = _interopRequireDefault(require("./vue/vueAdapter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getTree(target, adapterId) {
  if (adapterId === "react" && _reactAdapter.default.getTree) {
    return _reactAdapter.default.getTree(target);
  }

  if (adapterId === "svelte" && _svelteAdapter.default.getTree) {
    return _svelteAdapter.default.getTree(target);
  }

  if (adapterId === "vue" && _vueAdapter.default.getTree) {
    return _vueAdapter.default.getTree(target);
  }

  if (adapterId === "jsx" && _jsxAdapter.default.getTree) {
    return _jsxAdapter.default.getTree(target);
  }

  if ((0, _shared.detectSvelte)() && _svelteAdapter.default.getTree) {
    return _svelteAdapter.default.getTree(target);
  }

  if ((0, _shared.detectVue)() && _vueAdapter.default.getTree) {
    return _vueAdapter.default.getTree(target);
  }

  if ((0, _shared.detectReact)() && _reactAdapter.default.getTree) {
    return _reactAdapter.default.getTree(target);
  } // Must be last, because its global data leaks from Locator extension.
  // Because the extension is in SolidJS and it uses JSX plugin in dev mode.


  if ((0, _shared.detectJSX)() && _jsxAdapter.default.getTree) {
    return _jsxAdapter.default.getTree(target);
  }

  return null;
}